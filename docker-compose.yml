version: "3.8"
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    depends_on:
      db:
        condition: service_started
    networks:
      - assis_network
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    env_file:
      - .env.example
    command: ["npm", "run", "dev"]

  db-migrate:
    image: migrate/migrate:v4.15.2
    volumes:
      - ./src/application/database/migrations:/migrations
    depends_on:
      db:
        condition: service_healthy
    networks:
      - assis_network

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    env_file:
      - .env.example
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U $${DB_USER} -d $${DB_PASSWORD}'"]
      interval: 3s
      timeout: 3s
      retries: 3
    networks:
      - assis_network
    command: ["postgres", "-c", "log_statement=all", "-c", "log_destination=stderr"]

volumes:
  node_modules:

networks:
  assis_network:
    driver: bridge